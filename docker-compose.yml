version: '3.8'
services:
  kafka-0:
    image: docker.io/bitnami/kafka:3.8
    container_name: mixie-kafka-0
    hostname: kafka-0
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '19092']
      interval: 10s
      timeout: 5s
      retries: 12
    ports:
      - '9092:9092' # Host port 9092 -> Broker 0's client port
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-0:19092,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Replication settings for single-node setup
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka-net
    volumes:
      - 'kafka0_data:/bitnami/kafka'

  kafka-1:
    image: docker.io/bitnami/kafka:3.8
    container_name: mixie-kafka-1
    hostname: kafka-1
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '19092']
      interval: 10s
      timeout: 5s
      retries: 12
    ports:
      - '9093:9092' # Host port 9093 -> Broker 1's client port
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1:19092,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Replication settings for single-node setup
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka-net
    volumes:
      - 'kafka1_data:/bitnami/kafka'

  schema-registry:
    image: docker.io/bitnami/schema-registry:7.7
    container_name: mixie-kafka-registry
    ports:
      - '8081:8081'
    depends_on:
      kafka-0:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
    environment:
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka-0:19092,PLAINTEXT://kafka-1:19092
    networks:
      - kafka-net

  # schema-registry:
  #   image: docker.io/bitnami/schema-registry:7.7
  #   container_name: mixie-kafka-registry
  #   ports:
  #     - '8081:8081'
  #   depends_on:
  #     - kafka-0
  #     - kafka-1
  #   environment:
  #     - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
  #     - SCHEMA_REGISTRY_KAFKA_BROKERS=INTERNAL://kafka-0:19092,INTERNAL://kafka-1:19092
  #   networks:
  #     - kafka-net

  # redpanda:
  #   image: docker.vectorized.io/vectorized/redpanda:latest
  #   container_name: mixie-redpanda
  #   environment:
  #     - REDPANDA_AUTO_CREATE_TOPICS=true
  #     - REDPANDA_DEVELOPER_MODE=true
  #   ports:
  #     - '8081:8081' # Schema Registry port
  #   command:
  #     - redpanda start --schema-registry-addr 0.0.0.0:8081

  postgres:
    image: postgres:16-alpine
    container_name: mixie-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mixie
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  kafka-net:

volumes:
  kafka0_data:
  kafka1_data:
  postgres_data:
